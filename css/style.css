@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Arial";
  src: url("../fonts/Arial/Arial-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Arial SemiBold";
  src: url("../fonts/Arial/Arial-Semibold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-dark: #1C1C1C;
  --color-blue-dark: #3C4DA3;
  --color-light: #FFFFFF;
  --color-pink: #E950E3;
  --border: 1px solid var(--color-dark);
  --border-radius: 14px;
  --border-radius-small: 7px;
  --border-radius-large: 45px;
  --shadow: 0 5px 0 0 var(--color-dark);
  --font-family-base: "Arial", sans-serif;
  --font-family-second: "Arial SemiBold", sans-serif;
  --container-width: 1240px;
  --container-padding-x: 20px;
  --section-padding-y: 70px;
  --input-height: 59px;
  --button-height: 68px;
  --transition-duration: 0.2s;
}

html {
  font-size: 62.5%;
}

body {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
  font-family: var(--font-family-base), sans-serif;
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-dark);
  background-color: var(--color-light);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-weight: 500;
}

.cards__title {
  font-family: var(--font-family-second), sans-serif;
  font-size: 2.2rem;
}

.card {
  float: left;
  margin-right: 2rem;
  max-width: 25rem;
  width: 100%;
  margin-block: 2rem;
  padding-inline: 2rem;
  border: var(--border);
  font-family: var(--font-family-base), sans-serif;
}
.card__title-body {
  font-family: var(--font-family-second), sans-serif;
  font-size: 1.8rem;
  padding-block: 1rem;
}
.card__description {
  padding-bottom: 1rem;
  max-width: 228px;
  width: 100%;
  text-wrap: wrap;
  font-size: 1.4rem;
  white-space: wrap;
  text-align: left;
  letter-spacing: -0.4px;
}
.card__button {
  border: none;
  background: transparent;
  font-size: 1.4rem;
  color: var(--color-blue-dark);
  border-bottom: 1px solid CurrentColor;
}
.card__button:hover {
  color: var(--color-light);
  background-color: var(--color-pink);
  border-bottom: 1px solid CurrentColor;
}
.card__image {
  margin-block: 1rem;
}

.cards__button-bottom {
  border: none;
  background: transparent;
  font-size: 1.4rem;
  color: var(--color-blue-dark);
  border-bottom: 1px solid CurrentColor;
  text-wrap: wrap;
  width: 7rem;
}
.cards__button-bottom:hover {
  color: var(--color-light);
  background-color: var(--color-pink);
  text-underline: var(--color-light);
}

.mt {
  margin: 4rem;
}

.clearfix {
  margin-bottom: 30rem;
  overflow: auto;
  clear: both;
  display: table;
}

/*# sourceMappingURL=style.css.map */
